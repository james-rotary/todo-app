version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: todo-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: todo
      POSTGRES_PASSWORD: todo
      POSTGRES_DB: todo
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U todo -d todo"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - todo-network

  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: todo-api
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://todo:todo@db:5432/todo?schema=public
      PORT: 8080
      NODE_ENV: production
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/healthz || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - todo-network
    command: sh -c "npx prisma migrate deploy && npm start"

  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
    container_name: todo-frontend
    restart: unless-stopped
    environment:
      API_BASE_URL_INTERNAL: http://api:8080
      NODE_ENV: production
    ports:
      - "3000:3000"
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/healthz || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - todo-network

volumes:
  postgres_data:

networks:
  todo-network:
    driver: bridge
